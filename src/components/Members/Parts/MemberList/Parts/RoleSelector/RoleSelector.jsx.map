{"version":3,"file":"RoleSelector.jsx","sourceRoot":"","sources":["RoleSelector.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,iBAAiB,EAAyB,MAAM,iCAAiC,CAAC;AAC3F,OAAO,EAAE,kBAAkB,EAAE,MAAM,sBAAsB,CAAC;AAG1D,OAAO,SAAS,MAAM,qCAAqC,CAAC;AAiB5D,OAAO;AACP;IAA2B,gCAAiC;IAC1D,sBAAY,KAAwB;QAApC,YACE,kBAAM,KAAK,CAAC,SAGb;QADC,KAAI,CAAC,QAAQ,GAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;IAC3C,CAAC;IAED,+BAAQ,GAAR,UAAS,WAAiB;QAClB,IAAA,KAAuB,IAAI,CAAC,KAAK,EAAhC,QAAQ,cAAA,EAAE,QAAQ,cAAc,CAAC;QAExC,QAAQ,CAAC,iBAAiB,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,iCAAU,GAAV;QACE,OAAO,SAAS,CAAC,GAAG,CAAC,UAAC,EAAqB;gBAApB,IAAI,UAAA;YAAqB,OAAA,CAAC;gBAC/C,EAAE,EAAG,IAAI;gBACT,KAAK,EAAG,IAAI;aACb,CAAC;QAH8C,CAG9C,CAAC,CAAC;IACN,CAAC;IAED,sCAAe,GAAf;QACE,IAAM,QAAQ,GAAG,MAAM,CAAC;QAClB,IAAA,KAA2C,IAAI,CAAC,KAAK,EAApD,YAAY,kBAAA,EAAE,cAAc,oBAAA,EAAE,QAAQ,cAAc,CAAC;QAC5D,IAAM,cAAc,GAAG,cAAc,IAAI,cAAc,CAAC,QAAQ,CAAC,IAAI,cAAc,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAExG,aAAa;QACb,OAAO,cAAc,CAAC,CAAC,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;IAC5E,CAAC;IAED,6BAAM,GAAN;QACE,IAAM,OAAO,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAClC,IAAM,UAAU,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAE1C,OAAO,CACL,CAAC,kBAAkB,CACjB,WAAW,CAAC,CAAC,aAAa,CAAC,CAC3B,QAAQ,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CACxB,OAAO,CAAC,CAAC,OAAO,CAAC,CACjB,UAAU,CAAC,CAAC,UAAU,CAAC,EACvB,CACH,CAAC;IACJ,CAAC;IACH,mBAAC;AAAD,CAAC,AA1CD,CAA2B,KAAK,CAAC,SAAS,GA0CzC;AAED,mBAAmB;AACnB,IAAM,eAAe,GAAG,UAAC,KAAqB;IACrC,IAAA,IAAI,GAA6B,KAAK,KAAlC,EAAE,OAAO,GAAoB,KAAK,QAAzB,EAAE,cAAc,GAAI,KAAK,eAAT,CAAU;IAE9C,OAAO,CAAC;QACN,IAAI,MAAA;QACJ,OAAO,SAAA;QACP,cAAc,gBAAA;KACf,CAAC,CAAA;AACJ,CAAC,CAAC;AAEF,eAAe,OAAO,CAAC,eAAe,CAAC,CAAC,YAAY,CAAC,CAAC","sourcesContent":["import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { memberRoleChanged, MemberRoleChangedType } from '../../../../../../redux/actions';\r\nimport { StyledRoleSelector } from './RoleSelector.style';\r\nimport { BaseStateType } from '../../../../../../redux/reducers';\r\nimport { MembersType, RowsType, RoleType, UnsavedChangesType } from '../../../../../../tools/globalTypes';\r\nimport RolesData from './../../../../../../data/roles.json';\r\nimport { StyledMemberSelector } from '../MemberSelector/MemberSelector.style';\r\n\r\n// Types\r\nexport interface DataRoleType {\r\n  name : string,\r\n  allowedAccessLevels : Array<string>\r\n}\r\nexport interface RoleSelectorType {\r\n  dispatch : (action: MemberRoleChangedType) => void,\r\n  rowIndex : number,\r\n  members : MembersType,\r\n  rows : RowsType,\r\n  unsavedChanges : UnsavedChangesType,\r\n  selectedRole : RoleType\r\n}\r\n\r\n// Main\r\nclass RoleSelector extends React.Component<RoleSelectorType> {\r\n  constructor(props : RoleSelectorType) {\r\n    super(props);\r\n\r\n    this.onChange = this.onChange.bind(this);\r\n  }\r\n\r\n  onChange(newRoleName : any) {\r\n    const {dispatch, rowIndex} = this.props;\r\n\r\n    dispatch(memberRoleChanged(rowIndex, newRoleName));\r\n  }\r\n\r\n  getOptions() {\r\n    return RolesData.map(({name} : DataRoleType) => ({\r\n      id : name,\r\n      label : name\r\n    }));\r\n  }\r\n\r\n  getSelectedRole() {\r\n    const property = \"role\";\r\n    const {selectedRole, unsavedChanges, rowIndex} = this.props;\r\n    const hasUnsavedRole = unsavedChanges && unsavedChanges[rowIndex] && unsavedChanges[rowIndex][property];\r\n\r\n    // @ts-ignore\r\n    return hasUnsavedRole ? unsavedChanges[rowIndex][property] : selectedRole;\r\n  }\r\n\r\n  render() {\r\n    const options = this.getOptions();\r\n    const selectedId = this.getSelectedRole();\r\n\r\n    return (\r\n      <StyledRoleSelector\r\n        placeholder={\"Choose role\"}\r\n        onChange={this.onChange}\r\n        options={options}\r\n        selectedId={selectedId}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\n// Store connection\r\nconst mapStateToProps = (state : BaseStateType) => {\r\n  const {rows, members, unsavedChanges} = state;\r\n\r\n  return ({\r\n    rows,\r\n    members,\r\n    unsavedChanges\r\n  })\r\n};\r\n\r\nexport default connect(mapStateToProps)(RoleSelector);"]}