{"version":3,"file":"Members.jsx","sourceRoot":"","sources":["Members.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport MemberList from './Parts/MemberList/MemberList';\r\nimport AddMemberRow from './Parts/AddMemberRow/AddMemberRow';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\r\nimport { SetMembersDataType, setMembersData } from '../../redux/actions';\r\nimport { StyledMembers } from './Members.style';\r\nimport { BaseStateType } from '../../redux/reducers';\r\nimport { MemberType, MembersType } from '../../tools/globalTypes';\r\nimport getMembers from '../../services/apiCalls/_mocked_getMembers';\r\n\r\n// Types\r\ninterface MembersClassType {\r\n  members : MembersType,\r\n  dispatch : (action: SetMembersDataType) => void\r\n}\r\n\r\n// Main\r\nclass Members extends React.Component<MembersClassType> {\r\n\r\n  state : {\r\n    error_message : string\r\n  };\r\n\r\n  constructor(props : MembersClassType) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      error_message : \"\"\r\n    };\r\n\r\n    this.getMembersData = this.getMembersData.bind(this);\r\n    this.getMembersDataCallback = this.getMembersDataCallback.bind(this);\r\n    this.getMembersDataError = this.getMembersDataError.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getMembersData();\r\n  }\r\n\r\n  getMembersData() {\r\n    getMembers()\r\n      // @ts-ignore\r\n      .then(this.getMembersDataCallback)\r\n     .catch(this.getMembersDataError);\r\n\r\n    return true;\r\n  }\r\n\r\n  getMembersDataError(error_message : string) {\r\n    this.setState({ error_message : error_message || \"An error occured\" });\r\n  }\r\n\r\n  getMembersDataCallback(members : MembersType) {\r\n    const newMembers = members ? members.map((member : MemberType) => {\r\n      return {\r\n        person_id : member.person_id,\r\n        firstname : member.firstname,\r\n        lastname : member.lastname,\r\n        business_unit : member.business_unit,\r\n        is_user : member.is_user,\r\n        title : member.title,\r\n      };\r\n    }) : [];\r\n\r\n    this.props.dispatch(setMembersData(newMembers));\r\n    this.setState({ error_message : \"\" });\r\n  }\r\n\r\n  render() {\r\n    const {members} = this.props;\r\n    const {error_message} = this.state;\r\n\r\n    return (\r\n      <StyledMembers>\r\n        {error_message ? (\r\n          <ErrorMessage retry={this.getMembersData}>\r\n            {error_message.toString()}\r\n          </ErrorMessage>\r\n        ) : (\r\n          members ? (\r\n            <MemberList\r\n              members={members}\r\n            />\r\n          ) : (\r\n            <Spinner />\r\n          )\r\n        )}\r\n        <AddMemberRow />\r\n      </StyledMembers>\r\n    );\r\n  }\r\n}\r\n\r\n// Store connection\r\nconst mapStateToProps = (state : BaseStateType) => {\r\n  const {members} = state;\r\n\r\n  return ({\r\n    members\r\n  })\r\n};\r\n\r\nexport default connect(mapStateToProps)(Members);\r\n"]}