{"version":3,"file":"CheckBox.jsx","sourceRoot":"","sources":["CheckBox.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,IAAI,EAAE,MAAM,kBAAkB,CAAC;AAa5E,OAAO;AACP,gBAAe,UAAC,EAA+D;QAA7D,IAAI,UAAA,EAAE,KAAK,WAAA,EAAE,QAAQ,cAAA,EAAE,IAAI,UAAA,EAAE,QAAQ,cAAA,EAAE,KAAK,WAAA;IAC5D,IAAM,mBAAmB,GAAG,UAAA,KAAK;QAC/B,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC,CAAC;IAEF,OAAO,CACL,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAC5B;MAAA,CAAC,KAAK,CACJ,IAAI,CAAC,UAAU,CACf,EAAE,CAAC,CAAC,IAAI,CAAC,CACT,IAAI,CAAC,CAAC,IAAI,CAAC,CACX,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAC9B,OAAO,CAAC,CAAC,KAAK,CAAC,EAEjB;MAAA,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CACnB;QAAA,CAAC,SAAS,CACR;UAAA,CAAC,KAAK,CACR;QAAA,EAAE,SAAS,CACX;QAAA,CAAC,IAAI,CAAC,CAAC,CAAC,CACN,CAAC,IAAI,CACH;YAAA,CAAC,IAAI,CACP;UAAA,EAAE,IAAI,CAAC,CACR,CAAC,CAAC,CAAC,IAAI,CACV;MAAA,EAAE,KAAK,CACT;IAAA,EAAE,SAAS,CAAC,CACb,CAAC;AACJ,CAAC,EAAC","sourcesContent":["import * as React from 'react';\r\nimport { Container, Input, Label, LabelText, Hint } from './Checkbox.style';\r\nimport { FormEventHandler } from 'react';\r\n\r\n// Types\r\nexport interface CheckBoxType {\r\n  name : string,\r\n  label : string,\r\n  onChange : FormEventHandler,\r\n  hint ?: string,\r\n  hasError ?: boolean,\r\n  value : boolean\r\n}\r\n\r\n// Main\r\nexport default ({ name, label, onChange, hint, hasError, value } : CheckBoxType) => {\r\n  const localChangeCallback = event => {\r\n    onChange(event.target.checked);\r\n  };\r\n\r\n  return (\r\n    <Container hasError={hasError}>\r\n      <Input\r\n        type=\"checkbox\"\r\n        id={name}\r\n        name={name}\r\n        onChange={localChangeCallback}\r\n        checked={value}\r\n      />\r\n      <Label htmlFor={name}>\r\n        <LabelText>\r\n          {label}\r\n        </LabelText>\r\n        {hint ? (\r\n          <Hint>\r\n            {hint}\r\n          </Hint>\r\n        ) : null}\r\n      </Label>\r\n    </Container>\r\n  );\r\n};\r\n"]}