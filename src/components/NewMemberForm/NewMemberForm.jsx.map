{"version":3,"file":"NewMemberForm.jsx","sourceRoot":"","sources":["NewMemberForm.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { StyledNewMemberForm } from './NewMemberForm.style';\r\nimport NewMemberSection from './Parts/NewMemberSection/NewMemberSection';\r\nimport ErrorMessage from '../ErrorMessage/ErrorMessage';\r\nimport Modal from './../Modal/Modal';\r\nimport { addNewMember } from '../../redux/actions';\r\nimport FieldTypes from './fieldTypes';\r\nimport {\r\n  FieldsType,\r\n  NewMemberFormType,\r\n  NewMemberFormStateType\r\n} from './NewMemberFormTypes';\r\nimport { CreateMemberType } from '../../tools/globalTypes';\r\nimport { BaseStateType } from '../../redux/reducers';\r\nimport createMember from '../../services/apiCalls/_mocked_createMember';\r\n\r\n// Constants\r\nconst FIELDS : FieldsType = FieldTypes;\r\nconst INITIAL_STATE : NewMemberFormStateType = {\r\n  values : {\r\n    firstname : FIELDS.firstname.initialValue,\r\n    lastname : FIELDS.lastname.initialValue,\r\n    is_user : FIELDS.is_user.initialValue,\r\n    title : FIELDS.title.initialValue,\r\n    business_unit : FIELDS.business_unit.initialValue,\r\n  },\r\n  error_message : \"\",\r\n  required_errors : [],\r\n  already_exist_errors : [],\r\n};\r\n\r\n// Main\r\nclass NewMemberForm extends React.Component<NewMemberFormType> {\r\n  state : NewMemberFormStateType;\r\n\r\n  constructor(props : NewMemberFormType) {\r\n    super(props);\r\n\r\n    this.state = {...INITIAL_STATE};\r\n\r\n    this.saveMember = this.saveMember.bind(this);\r\n    this.checkForMemberAlreadyExist = this.checkForMemberAlreadyExist.bind(this);\r\n    this.saveMemberCallback = this.saveMemberCallback.bind(this);\r\n    this.saveMemberError = this.saveMemberError.bind(this);\r\n    this.onValueChanged = this.onValueChanged.bind(this);\r\n    this.getRequiredValueErrors = this.getRequiredValueErrors.bind(this);\r\n    this.getFieldValuesForApiCall = this.getFieldValuesForApiCall.bind(this);\r\n  }\r\n\r\n  saveMemberCallback(memberData : CreateMemberType) {\r\n    const {dispatch, closeModal} = this.props;\r\n\r\n    dispatch(addNewMember(memberData));\r\n    this.setState(INITIAL_STATE);\r\n    closeModal();\r\n  }\r\n\r\n  saveMemberError(error_message ?: string) {\r\n    this.setState({ error_message : error_message || \"An error occured\" });\r\n  }\r\n\r\n  getRequiredValueErrors() {\r\n    const required_errors : Array<string> = [];\r\n\r\n    Object.keys(FIELDS).forEach((field : string) => {\r\n      const {required} = FIELDS[field];\r\n      const currentValue = this.state.values[field];\r\n\r\n      if (required && !currentValue) {\r\n        required_errors.push(field);\r\n      }\r\n    });\r\n\r\n    return required_errors;\r\n  }\r\n\r\n  getFieldValuesForApiCall() {\r\n    let fieldValuesObj = {...INITIAL_STATE.values};\r\n\r\n    Object.keys(FIELDS).forEach(field => {\r\n      const {name} = FIELDS[field];\r\n\r\n      fieldValuesObj[name] = this.state.values[field];\r\n    });\r\n\r\n    return fieldValuesObj;\r\n  }\r\n\r\n  checkForMemberAlreadyExist() {\r\n    const {members} = this.props;\r\n    const {values : { firstname, lastname }} = this.state;\r\n\r\n    return members.find(member => member.firstname === firstname && member.lastname === lastname);\r\n  }\r\n\r\n  saveMember() {\r\n    const memberAlreadyExist = this.checkForMemberAlreadyExist();\r\n    const requiredErrors = this.getRequiredValueErrors();\r\n\r\n    if (requiredErrors.length > 0) {\r\n      this.setState({ required_errors : requiredErrors });\r\n    }\r\n    else if (memberAlreadyExist) {\r\n      this.setState({ already_exist_errors : [\"firstname\"] });\r\n    }\r\n    else {\r\n      const callOptions = { method:'post', data: this.getFieldValuesForApiCall()};\r\n      // @ts-ignore\r\n      createMember(callOptions)\r\n        // @ts-ignore\r\n        .then(this.saveMemberCallback)\r\n        .catch(this.saveMemberError)\r\n    }\r\n  }\r\n\r\n  onValueChanged(fieldKey : string, newValue : string | boolean) {\r\n    const {values} = this.state;\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      values : {\r\n        ...values,\r\n        [fieldKey] : newValue\r\n      }\r\n    });\r\n  }\r\n\r\n  getField(fieldKey : string) {\r\n    const {required_errors, already_exist_errors} = this.state;\r\n    const {name, label, required, ComponentName, hint} = FIELDS[fieldKey];\r\n    const value = this.state.values[fieldKey];\r\n    const hasRequiredError = required_errors && required_errors.indexOf(fieldKey) > -1;\r\n    const hasAlreadyExistError = already_exist_errors && already_exist_errors.indexOf(fieldKey) > -1;\r\n    const hasError = hasRequiredError || hasAlreadyExistError;\r\n\r\n    return (\r\n      <ComponentName\r\n        hasError={hasError}\r\n        errorMessage={hasAlreadyExistError ? \"A member with this name is already exist\" : null}\r\n        name={name}\r\n        label={label}\r\n        required={required}\r\n        value={value}\r\n        hint={hint}\r\n        onChange={(newValue : string | boolean) => {\r\n          this.onValueChanged(fieldKey, newValue);\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const {closeModal} = this.props;\r\n    const {error_message} = this.state;\r\n\r\n    return (\r\n      <Modal\r\n        title={\"Create member\"}\r\n        onClose={closeModal}\r\n        onCancel={closeModal}\r\n        onSave={this.saveMember}\r\n        saveButtonText={\"Create member\"}\r\n        cancelButtonText={\"Cancel\"}\r\n      >\r\n        <StyledNewMemberForm>\r\n          <NewMemberSection>\r\n            {this.getField(\"firstname\")}\r\n            {this.getField(\"lastname\")}\r\n            {this.getField(\"is_user\")}\r\n          </NewMemberSection>\r\n          <NewMemberSection>\r\n            {this.getField(\"title\")}\r\n            {this.getField(\"business_unit\")}\r\n          </NewMemberSection>\r\n          {error_message ? (\r\n            <ErrorMessage retry={this.saveMember}>\r\n              {error_message}\r\n            </ErrorMessage>\r\n          ) : null}\r\n        </StyledNewMemberForm>\r\n      </Modal>\r\n    );\r\n  }\r\n}\r\n\r\n// Store connection\r\nconst mapStateToProps = (state : BaseStateType) => {\r\n  const {members} = state;\r\n\r\n  return ({\r\n    members,\r\n  })\r\n};\r\n\r\nexport default connect(mapStateToProps)(NewMemberForm);"]}