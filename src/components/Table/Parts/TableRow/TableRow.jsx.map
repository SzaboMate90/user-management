{"version":3,"file":"TableRow.jsx","sourceRoot":"","sources":["TableRow.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,SAAS,MAAM,wBAAwB,CAAC;AAC/C,OAAO,EAAE,cAAc,EAAE,MAAM,kBAAkB,CAAC;AAUlD,OAAO;AACL,gBAAe,UAAC,EAAkC;QAAhC,KAAK,WAAA,EAAE,QAAQ,cAAA;IAAsB,OAAA,CACvD,CAAC,cAAc,CACb;IAAA,CAAC,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,UAAC,WAAiB,EAAE,KAAc,IAAK,OAAA,CACxD,CAAC,SAAS,CACR,GAAG,CAAC,CAAC,KAAK,CAAC,CACX,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAEnB;QAAA,CAAC,WAAW,CACd;MAAA,EAAE,SAAS,CAAC,CACb,EAPyD,CAOzD,CAAC,CAAC,CAAC,CAAC,EAAE,CACT;EAAA,EAAE,cAAc,CAAC,CAClB;AAXwD,CAWxD,EAAC","sourcesContent":["import * as React from 'react';\r\nimport TableCell from '../TableCell/TableCell';\r\nimport { StyledTableRow } from './TableRow.style';\r\nimport { ChildrenType } from '../../../../tools/globalTypes';\r\n\r\n// Types\r\nexport interface TableRowType {\r\n  key ?: number,\r\n  isHeader ?: boolean,\r\n  cells : Array<ChildrenType>\r\n}\r\n\r\n// Main\r\n  export default ({ cells, isHeader } : TableRowType) => (\r\n  <StyledTableRow>\r\n    {cells ? cells.map((cellContent : any, index : number) => (\r\n      <TableCell\r\n        key={index}\r\n        isHeader={isHeader}\r\n      >\r\n        {cellContent}\r\n      </TableCell>\r\n    )) : []}\r\n  </StyledTableRow>\r\n);\r\n"]}