{"version":3,"file":"Header.jsx","sourceRoot":"","sources":["Header.tsx"],"names":[],"mappings":";;;;;;;;;;;;;AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,OAAO,EAAE,MAAM,aAAa,CAAC;AACtC,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAC9C,OAAO,aAAa,MAAM,kCAAkC,CAAC;AAC7D,OAAO,kBAAkB,MAAM,4CAA4C,CAAC;AAC5E,OAAO,iBAAiB,MAAM,0CAA0C,CAAC;AACzE,OAAO,aAAa,MAAM,kCAAkC,CAAC;AAC7D,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAUlD,OAAO;AACP;IAAqB,0BAA2B;IAK9C,gBAAY,KAAkB;QAA9B,YACE,kBAAM,KAAK,CAAC,SAQb;QANC,KAAI,CAAC,KAAK,GAAG;YACX,aAAa,EAAG,KAAK;SACtB,CAAC;QAEF,KAAI,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;QAC3C,KAAI,CAAC,UAAU,GAAG,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAI,CAAC,CAAC;;IAC/C,CAAC;IAED,0BAAS,GAAT;QACE,IAAI,CAAC,QAAQ,CAAC,EAAE,aAAa,EAAG,IAAI,EAAE,CAAC,CAAC;IAC1C,CAAC;IAED,2BAAU,GAAV;QACE,IAAI,CAAC,QAAQ,CAAC,EAAE,aAAa,EAAG,KAAK,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED,uBAAM,GAAN;QACQ,IAAA,KAAkC,IAAI,CAAC,KAAK,EAA3C,cAAc,oBAAA,EAAE,aAAa,mBAAc,CAAC;QAC5C,IAAA,aAAa,GAAI,IAAI,CAAC,KAAK,cAAd,CAAe;QACnC,IAAM,oBAAoB,GAAG,CAAC,CAAC,CAAC,cAAc,IAAI,aAAa,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACrG,IAAM,iBAAiB,GAAG,CAAC,oBAAoB,CAAC;QAEhD,OAAO,CACL,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,oBAAoB,CAAC,CAC9C;QAAA,CAAC,iBAAiB,CAAC,CAAC,CAAC,CACnB,CAAC,aAAa,CACZ;YAAA,CAAC,aAAa,CAChB;UAAA,EAAE,aAAa,CAAC,CACjB,CAAC,CAAC,CAAC,IAAI,CACR;QAAA,CAAC,oBAAoB,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,AAAD,EAAG,CAAC,CAAC,CAAC,IAAI,CACpD;QAAA,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,EAC5C;QAAA,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,EAAG,CAAC,CAAC,CAAC,IAAI,CACxE;MAAA,EAAE,YAAY,CAAC,CAChB,CAAC;IACJ,CAAC;IACH,aAAC;AAAD,CAAC,AA3CD,CAAqB,KAAK,CAAC,SAAS,GA2CnC;AAED,mBAAmB;AACnB,IAAM,eAAe,GAAG,UAAC,KAAqB;IACrC,IAAA,cAAc,GAAI,KAAK,eAAT,CAAU;IAE/B,OAAO,CAAC;QACN,cAAc,gBAAA;KACf,CAAC,CAAA;AACJ,CAAC,CAAC;AAEF,eAAe,OAAO,CAAC,eAAe,CAAC,CAAC,MAAM,CAAC,CAAC","sourcesContent":["import * as React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { StyledHeader } from './Header.style';\r\nimport DeveloperName from './../DeveloperName/DeveloperName';\r\nimport AddNewMemberButton from './../AddNewMemberButton/AddNewMemberButton';\r\nimport SaveChangesButton from './../SaveChangesButton/SaveChangesButton';\r\nimport NewMemberForm from './../NewMemberForm/NewMemberForm';\r\nimport { isEmptyObject } from '../../tools/tools';\r\nimport { BaseStateType } from '../../redux/reducers';\r\nimport { UnsavedChangesType } from '../../tools/globalTypes';\r\n\r\n// Types\r\nexport interface HeaderType {\r\n  developerName : string,\r\n  unsavedChanges : UnsavedChangesType\r\n}\r\n\r\n// Main\r\nclass Header extends React.Component<HeaderType> {\r\n  state : {\r\n    isModalOpened : boolean\r\n  };\r\n\r\n  constructor(props : HeaderType) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isModalOpened : false\r\n    };\r\n\r\n    this.openModal = this.openModal.bind(this);\r\n    this.closeModal = this.closeModal.bind(this);\r\n  }\r\n\r\n  openModal() {\r\n    this.setState({ isModalOpened : true });\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({ isModalOpened : false });\r\n  }\r\n\r\n  render() {\r\n    const {unsavedChanges, developerName} = this.props;\r\n    const {isModalOpened} = this.state;\r\n    const hasSaveChangesButton = !((unsavedChanges && isEmptyObject(unsavedChanges)) || !unsavedChanges);\r\n    const showCandidateName = !hasSaveChangesButton;\r\n\r\n    return (\r\n      <StyledHeader highlighted={hasSaveChangesButton}>\r\n        {showCandidateName ? (\r\n          <DeveloperName>\r\n            {developerName}\r\n          </DeveloperName>\r\n        ) : null}\r\n        {hasSaveChangesButton ? <SaveChangesButton /> : null}\r\n        <AddNewMemberButton onClick={this.openModal} />\r\n        {isModalOpened ? <NewMemberForm closeModal={this.closeModal} /> : null}\r\n      </StyledHeader>\r\n    );\r\n  }\r\n}\r\n\r\n// Store connection\r\nconst mapStateToProps = (state : BaseStateType) => {\r\n  const {unsavedChanges} = state;\r\n\r\n  return ({\r\n    unsavedChanges\r\n  })\r\n};\r\n\r\nexport default connect(mapStateToProps)(Header);\r\n"]}